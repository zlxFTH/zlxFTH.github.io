<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LOJ6029「雅礼集训 2017 Day1」市场</title>
    <url>/posts/LOJ6029/</url>
    <content><![CDATA[<h2 id="题意">题意</h2>
<p>维护一个 DS 支持：</p>
<ul>
<li>区间加</li>
<li>区间对某个数下取整</li>
<li>区间最小值</li>
<li>区间和</li>
</ul>
<span id="more"></span>
<h2 id="题解">题解</h2>
<p>之前联考出过这个 trick，所以记录一下。</p>
<p>对一个区间下取整会使得区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>max</mi><mo>⁡</mo><mo>−</mo><mi>min</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\max - \min</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7512em;vertical-align:-0.0833em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span></span></span></span> 的值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/2</span></span></span></span>，而区间加不会改变这个值，所以可以势能分析，当递归到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>max</mi><mo>⁡</mo><mo>−</mo><mi>min</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\max - \min</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7512em;vertical-align:-0.0833em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span></span></span></span> 不会再改变的时候就可以打上<strong>区间加</strong>标记。</p>
<p>设每个点的势能为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>max</mi><mo>⁡</mo><mo>−</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log_2(\max - \min)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mclose">)</span></span></span></span>。</p>
<p>每进行一次操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 会有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 个节点的势能重置为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>V</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log V)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span>。</p>
<p>每进行一次操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 所有访问过的节点势能减少 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<p>所以时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>V</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\log n\log V)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="代码">代码</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, q;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line">LL mn[<span class="number">4</span> * N], mx[<span class="number">4</span> * N], tag[<span class="number">4</span> * N], sum[<span class="number">4</span> * N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ls</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;<span class="keyword">return</span> <span class="number">2</span> * i;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">rs</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;<span class="keyword">return</span> <span class="number">2</span> * i + <span class="number">1</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">upd</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">  mn[i] = std::<span class="built_in">min</span>(mn[<span class="built_in">ls</span>(i)], mn[<span class="built_in">rs</span>(i)]);</span><br><span class="line">  mx[i] = std::<span class="built_in">max</span>(mx[<span class="built_in">ls</span>(i)], mx[<span class="built_in">rs</span>(i)]);</span><br><span class="line">  sum[i] = sum[<span class="built_in">ls</span>(i)] + sum[<span class="built_in">rs</span>(i)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">    mn[i] = mx[i] = sum[i] = a[l];</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">build</span>(<span class="built_in">ls</span>(i), l, mid);</span><br><span class="line">  <span class="built_in">build</span>(<span class="built_in">rs</span>(i), mid + <span class="number">1</span>, r);</span><br><span class="line">  <span class="built_in">upd</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> l, <span class="type">int</span> r, LL v)</span> </span>&#123;</span><br><span class="line">  mn[i] += v, mx[i] += v, tag[i] += v;</span><br><span class="line">  sum[i] += (r - l + <span class="number">1</span>) * v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">down</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span> (tag[i]) &#123;</span><br><span class="line">    <span class="built_in">push</span>(<span class="built_in">ls</span>(i), l, mid, tag[i]);</span><br><span class="line">    <span class="built_in">push</span>(<span class="built_in">rs</span>(i), mid + <span class="number">1</span>, r, tag[i]);</span><br><span class="line">    tag[i] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr, LL v)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= l &amp;&amp; qr &gt;= r) &#123;</span><br><span class="line">    <span class="built_in">push</span>(i, l, r, v);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">down</span>(i, l, r);</span><br><span class="line">  <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= mid) <span class="built_in">add</span>(<span class="built_in">ls</span>(i), l, mid, ql, qr, v);</span><br><span class="line">  <span class="keyword">if</span> (qr &gt; mid) <span class="built_in">add</span>(<span class="built_in">rs</span>(i), mid + <span class="number">1</span>, r, ql, qr, v);</span><br><span class="line">  <span class="built_in">upd</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">calc</span><span class="params">(LL v, LL x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (v &gt;= <span class="number">0</span>) <span class="keyword">return</span> v / x;</span><br><span class="line">  <span class="keyword">return</span> -(-v - <span class="number">1</span>) / x - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">div</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr, LL v)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= l &amp;&amp; qr &gt;= r</span><br><span class="line">      &amp;&amp; mn[i] - <span class="built_in">calc</span>(mn[i], v) == mx[i] - <span class="built_in">calc</span>(mx[i], v)) &#123;</span><br><span class="line">    <span class="built_in">push</span>(i, l, r, <span class="built_in">calc</span>(mn[i], v) - mn[i]);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">down</span>(i, l, r);</span><br><span class="line">  <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= mid) <span class="built_in">div</span>(<span class="built_in">ls</span>(i), l, mid, ql, qr, v);</span><br><span class="line">  <span class="keyword">if</span> (qr &gt; mid) <span class="built_in">div</span>(<span class="built_in">rs</span>(i), mid + <span class="number">1</span>, r, ql, qr, v);</span><br><span class="line">  <span class="built_in">upd</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">gMin</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= l &amp;&amp; qr &gt;= r) <span class="keyword">return</span> mn[i];</span><br><span class="line">  LL res = <span class="number">1E18</span>;</span><br><span class="line">  <span class="built_in">down</span>(i, l, r);</span><br><span class="line">  <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= mid) res = std::<span class="built_in">min</span>(res, <span class="built_in">gMin</span>(<span class="built_in">ls</span>(i), l, mid, ql, qr));</span><br><span class="line">  <span class="keyword">if</span> (qr &gt; mid) res = std::<span class="built_in">min</span>(res, <span class="built_in">gMin</span>(<span class="built_in">rs</span>(i), mid + <span class="number">1</span>, r, ql, qr));</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">gSum</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= l &amp;&amp; qr &gt;= r) <span class="keyword">return</span> sum[i];</span><br><span class="line">  LL res = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">down</span>(i, l, r);</span><br><span class="line">  <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span> (ql &lt;= mid) res += <span class="built_in">gSum</span>(<span class="built_in">ls</span>(i), l, mid, ql, qr);</span><br><span class="line">  <span class="keyword">if</span> (qr &gt; mid) res += <span class="built_in">gSum</span>(<span class="built_in">rs</span>(i), mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;q);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">  <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">  <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">    <span class="type">int</span> op, l, r, v;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;op, &amp;l, &amp;r), ++l, ++r;</span><br><span class="line">    <span class="keyword">if</span> (op &lt;= <span class="number">2</span>) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;v);</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="number">1</span>) <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r, v);</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="number">2</span>) <span class="built_in">div</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r, v);</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">gMin</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r));</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">gSum</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
  </entry>
</search>
