<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>计算几何模板整理</title>
    <url>/posts/Geometry/</url>
    <content><![CDATA[<p>新一轮的模板整理采用分模块的方式，同时只保留重要内容，删去简短能够在赛场直接写出来并且不是每个题都要用的东西。</p>
<span id="more"></span>
<h2 id="点和向量">点和向量</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> Infdb = <span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">dcmp</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;<span class="keyword">return</span> x &lt; -eps ? <span class="number">-1</span> : x &gt; eps;&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">  <span class="type">double</span> x, y;</span><br><span class="line">  <span class="built_in">Point</span>(<span class="type">double</span> x = <span class="number">0</span>, <span class="type">double</span> y = <span class="number">0</span>) : <span class="built_in">x</span>(x), <span class="built_in">y</span>(y) &#123;&#125;</span><br><span class="line">  Point <span class="keyword">operator</span>+(Point b) &#123;<span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x, y + b.y);&#125;</span><br><span class="line">  Point <span class="keyword">operator</span>-(Point b) &#123;<span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x, y - b.y);&#125;</span><br><span class="line">  Point <span class="keyword">operator</span>*(<span class="type">double</span> p) &#123;<span class="keyword">return</span> <span class="built_in">Point</span>(x * p, y * p);&#125;</span><br><span class="line">  <span class="type">double</span> <span class="keyword">operator</span>*(Point b) &#123;<span class="keyword">return</span> x * b.x + y * b.y;&#125;</span><br><span class="line">  <span class="type">double</span> <span class="keyword">operator</span>^(Point b) &#123;<span class="keyword">return</span> x * b.y - y * b.x;&#125;</span><br><span class="line">  <span class="function"><span class="type">double</span> <span class="title">len</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(x * x + y * y);&#125;</span><br><span class="line">  <span class="type">bool</span> <span class="keyword">operator</span>&lt;(Point b) <span class="type">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="built_in">dcmp</span>(x - b.x) ? <span class="built_in">dcmp</span>(y - b.y) &lt; <span class="number">0</span> : <span class="built_in">dcmp</span>(x - b.x) &lt; <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">bool</span> <span class="keyword">operator</span>==(Point b) &#123;<span class="keyword">return</span> !<span class="built_in">dcmp</span>(x - b.x) &amp;&amp; !<span class="built_in">dcmp</span>(y - b.y);&#125;</span><br><span class="line">  <span class="function">Point <span class="title">rot</span><span class="params">(<span class="type">double</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Point</span>(x * <span class="built_in">cos</span>(p) - y * <span class="built_in">sin</span>(p), x * <span class="built_in">sin</span>(p) + y * <span class="built_in">cos</span>(p));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">ang</span><span class="params">(Point a, Point b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">acos</span>((a * b) / a.<span class="built_in">len</span>() / b.<span class="built_in">len</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="直线相关">直线相关</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">onSeg</span><span class="params">(Point p, Point a, Point b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> !<span class="built_in">dcmp</span>((p - a) ^ (p - b)) &amp;&amp; <span class="built_in">dcmp</span>((p - a) * (p - b)) &lt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">onLine</span><span class="params">(Point p, Point a, Point b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> !<span class="built_in">dcmp</span>((p - a) ^ (p - b));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">toLine</span><span class="params">(Point p, Point a, Point b)</span> </span>&#123;</span><br><span class="line">  Point v = b - a;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">fabs</span>(v ^ (p - a)) / v.<span class="built_in">len</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">foot</span><span class="params">(Point p, Point a, Point b)</span> </span>&#123;</span><br><span class="line">  Point v = b - a;</span><br><span class="line">  <span class="keyword">return</span> a + v * ((v * (p - a)) / (v * v));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">side</span><span class="params">(Point p, Point a, Point b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">dcmp</span>((p - a) ^ (b - a));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">toSeg</span><span class="params">(Point p, Point a, Point b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a == b) <span class="keyword">return</span> (p - a).<span class="built_in">len</span>();</span><br><span class="line">  Point x = p - a, y = p - b, z = b - a;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">dcmp</span>(x * z) &lt; <span class="number">0</span>) <span class="keyword">return</span> x.<span class="built_in">len</span>();</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">dcmp</span>(y * z) &gt; <span class="number">0</span>) <span class="keyword">return</span> y.<span class="built_in">len</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">toLine</span>(p, a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">inter</span><span class="params">(Point a, Point b, Point c, Point d)</span> </span>&#123;</span><br><span class="line">  Point x = b - a, y = d - c, z = a - c;</span><br><span class="line">  <span class="keyword">return</span> a + x * ((y ^ z) / (x ^ y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Line</span> &#123;</span><br><span class="line">  Point a, b;</span><br><span class="line">  <span class="type">double</span> k;</span><br><span class="line">  <span class="built_in">Line</span>() &#123;&#125;</span><br><span class="line">  <span class="built_in">Line</span>(Point a, Point b) : <span class="built_in">a</span>(a), <span class="built_in">b</span>(b) &#123;</span><br><span class="line">    k = <span class="built_in">atan2</span>(b.y - a.y, b.x - a.x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">bool</span> <span class="keyword">operator</span>&lt;(Line rhs) <span class="type">const</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">dcmp</span>(k - rhs.k)) <span class="keyword">return</span> <span class="built_in">dcmp</span>(k - rhs.k) &lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">side</span>(rhs.a, a, b) == <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">Point <span class="title">inter</span><span class="params">(Line p, Line q)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">inter</span>(p.a, p.b, q.a, q.b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="多边形相关">多边形相关</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> vector&lt;Point&gt; vPoint;</span><br><span class="line"><span class="function">vPoint <span class="title">convexHull</span><span class="params">(vPoint A)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> n = A.<span class="built_in">size</span>(), m = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span> A;</span><br><span class="line">  <span class="built_in">sort</span>(A.<span class="built_in">begin</span>(), A.<span class="built_in">end</span>());</span><br><span class="line">  <span class="function">vPoint <span class="title">B</span><span class="params">(<span class="number">2</span> * n)</span></span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; B[m++] = A[i++])</span><br><span class="line">    <span class="keyword">while</span> (m &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">dcmp</span>((A[i] - B[m - <span class="number">2</span>]) ^ (B[m - <span class="number">1</span>] - B[m - <span class="number">2</span>])) &gt;= <span class="number">0</span>) --m;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">2</span>, t = m; ~i; B[m++] = A[i--])</span><br><span class="line">    <span class="keyword">while</span> (m &gt; t &amp;&amp; <span class="built_in">dcmp</span>((A[i] - B[m - <span class="number">2</span>]) ^ (B[m - <span class="number">1</span>] - B[m - <span class="number">2</span>])) &gt;= <span class="number">0</span>) --m;</span><br><span class="line">  B.<span class="built_in">resize</span>(m - <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">inPoly</span><span class="params">(vPoint A, Point p)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> n = A.<span class="built_in">size</span>(), wn = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    Point a = A[i], b = A[(i + <span class="number">1</span>) % n];</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">onSeg</span>(p, a, b)) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> k = <span class="built_in">side</span>(b, a, p);</span><br><span class="line">    <span class="type">int</span> d1 = <span class="built_in">dcmp</span>(a.y - p.y), d2 = <span class="built_in">dcmp</span>(b.y - p.y);</span><br><span class="line">    <span class="keyword">if</span> (k &gt; <span class="number">0</span> &amp;&amp; d1 &lt;= <span class="number">0</span> &amp;&amp; d2 &gt; <span class="number">0</span>) wn++;</span><br><span class="line">    <span class="keyword">if</span> (k &lt; <span class="number">0</span> &amp;&amp; d2 &lt;= <span class="number">0</span> &amp;&amp; d1 &gt; <span class="number">0</span>) wn--;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> wn != <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">inConvexPoly</span><span class="params">(<span class="type">const</span> vPoint &amp;A, Point p)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> n = A.<span class="built_in">size</span>();</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">side</span>(p, A[<span class="number">0</span>], A[<span class="number">1</span>]) == <span class="number">1</span> || <span class="built_in">side</span>(A[n - <span class="number">1</span>], A[<span class="number">0</span>], p) == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">onSeg</span>(p, A[<span class="number">0</span>], A[<span class="number">1</span>]) || <span class="built_in">onSeg</span>(p, A[<span class="number">0</span>], A[n - <span class="number">1</span>])) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">  <span class="type">int</span> l = <span class="number">1</span>, r = n - <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">    <span class="type">int</span> mid = (l + r + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">side</span>(A[mid], A[<span class="number">0</span>], p) == <span class="number">1</span>) l = mid;</span><br><span class="line">    <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">side</span>(p, A[l], A[l + <span class="number">1</span>]) == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">onSeg</span>(p, A[l], A[l + <span class="number">1</span>])) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="圆相关">圆相关</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">  Point p;</span><br><span class="line">  <span class="type">double</span> r;</span><br><span class="line">  <span class="built_in">Circle</span>(Point p, <span class="type">double</span> r = <span class="number">0</span>) : <span class="built_in">p</span>(p), <span class="built_in">r</span>(r) &#123;&#125;</span><br><span class="line">  <span class="function">Point <span class="title">get</span><span class="params">(<span class="type">double</span> ang)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Point</span>(p.x + <span class="built_in">cos</span>(ang) * r, p.y + <span class="built_in">sin</span>(ang) * r);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">side</span><span class="params">(Circle c, Point a)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">dcmp</span>((a - c.p).<span class="built_in">len</span>() - c.r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">side</span><span class="params">(Circle a, Circle b)</span> </span>&#123;</span><br><span class="line">  <span class="type">double</span> d = (b.p - a.p).<span class="built_in">len</span>();</span><br><span class="line">  <span class="type">int</span> f = <span class="built_in">dcmp</span>(d - (a.r - b.r));</span><br><span class="line">  <span class="keyword">if</span> (f == <span class="number">0</span> &amp;&amp; !<span class="built_in">dcmp</span>(a.r - b.r)) f = <span class="number">-2</span>;</span><br><span class="line">  <span class="keyword">if</span> (f &gt; <span class="number">0</span>) f = <span class="number">2</span> + <span class="built_in">dcmp</span>(d - (a.r + b.r));</span><br><span class="line">  <span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">inter</span><span class="params">(Circle c, Point a, Point b, vPoint &amp;res)</span> </span>&#123;</span><br><span class="line">  <span class="type">double</span> d = <span class="built_in">toLine</span>(c.p, a, b);</span><br><span class="line">  <span class="type">int</span> f = <span class="built_in">dcmp</span>(d - c.r);</span><br><span class="line">  <span class="keyword">if</span> (f &lt; <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (!f) &#123;</span><br><span class="line">    res.<span class="built_in">push_back</span>(<span class="built_in">foot</span>(c.p, a, b));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Point p = <span class="built_in">foot</span>(c.p, a, b), v = b - a;</span><br><span class="line">    <span class="type">double</span> l = <span class="built_in">sqrt</span>(c.r * c.r - d * d);</span><br><span class="line">    res.<span class="built_in">push_back</span>(p + v * (l / v.<span class="built_in">len</span>()));</span><br><span class="line">    res.<span class="built_in">push_back</span>(p - v * (l / v.<span class="built_in">len</span>()));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">inter</span><span class="params">(Circle a, Circle b, vPoint &amp;res)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a.r &lt; b.r) <span class="built_in">swap</span>(a, b);</span><br><span class="line">  <span class="type">int</span> k = <span class="built_in">side</span>(a, b);</span><br><span class="line">  Point v = b.p - a.p;</span><br><span class="line">  <span class="type">double</span> d = v.<span class="built_in">len</span>(), base = <span class="built_in">atan2</span>(v.y, v.x);</span><br><span class="line">  <span class="keyword">if</span> (k == <span class="number">0</span> || k == <span class="number">2</span>) res.<span class="built_in">push_back</span>(a.<span class="built_in">get</span>(base));</span><br><span class="line">  <span class="keyword">if</span> (k == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="type">double</span> ag = <span class="built_in">acos</span>((a.r * a.r + d * d - b.r * b.r) / (a.r * d));</span><br><span class="line">    res.<span class="built_in">push_back</span>(a.<span class="built_in">get</span>(base + ag));</span><br><span class="line">    res.<span class="built_in">push_back</span>(a.<span class="built_in">get</span>(base - ag));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="半平面交">半平面交</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">vPoint <span class="title">halfCut</span><span class="params">(vector&lt;Line&gt; L)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> n = L.<span class="built_in">size</span>(), m = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">sort</span>(L.<span class="built_in">begin</span>(), L.<span class="built_in">end</span>());</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    <span class="keyword">if</span> (!i || <span class="built_in">dcmp</span>(L[i].k - L[i - <span class="number">1</span>].k)) L[m++] = L[i];</span><br><span class="line">  n = m;</span><br><span class="line">  <span class="function">vector&lt;Line&gt; <span class="title">Q</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">  <span class="type">int</span> h = <span class="number">1</span>, t = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    <span class="keyword">while</span> (h &lt; t &amp;&amp; <span class="built_in">side</span>(<span class="built_in">inter</span>(Q[t], Q[t - <span class="number">1</span>]), L[i].a, L[i].b) == <span class="number">1</span>) --t;</span><br><span class="line">    <span class="keyword">while</span> (h &lt; t &amp;&amp; <span class="built_in">side</span>(<span class="built_in">inter</span>(Q[h], Q[h + <span class="number">1</span>]), L[i].a, L[i].b) == <span class="number">1</span>) ++h;</span><br><span class="line">    <span class="keyword">if</span> (h &lt;= t &amp;&amp; !<span class="built_in">dcmp</span>(Q[t].k + L[i].k) &amp;&amp; <span class="built_in">side</span>(Q[t].a, L[i].a, L[i].b) &gt;= <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">vPoint</span>();</span><br><span class="line">    Q[++t] = L[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (h &lt; t &amp;&amp; <span class="built_in">side</span>(<span class="built_in">inter</span>(Q[t], Q[t - <span class="number">1</span>]), Q[h].a, Q[h].b) == <span class="number">1</span>) --t;</span><br><span class="line">  <span class="keyword">while</span> (h &lt; t &amp;&amp; <span class="built_in">side</span>(<span class="built_in">inter</span>(Q[h], Q[h + <span class="number">1</span>]), Q[t].a, Q[t].b) == <span class="number">1</span>) ++h;</span><br><span class="line">  vPoint A;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = h; i &lt;= t; ++i) &#123;</span><br><span class="line">    <span class="type">int</span> j = i &lt; t ? i + <span class="number">1</span> : h;</span><br><span class="line">    A.<span class="built_in">push_back</span>(<span class="built_in">inter</span>(Q[i], Q[j])); </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="动态凸包">动态凸包</h2>
<p>下凸壳 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mi>p</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">op = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，上凸壳 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mi>p</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">op = -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。</p>
<p>模板题 CF70D</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ConvexHull</span> &#123;</span><br><span class="line">  <span class="type">int</span> op;</span><br><span class="line">  set&lt;Point&gt; s;</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">in</span><span class="params">(Point p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> it = s.<span class="built_in">lower_bound</span>(<span class="built_in">Point</span>(p.x, -Infdb));</span><br><span class="line">    <span class="keyword">if</span> (it == s.<span class="built_in">end</span>()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">dcmp</span>(it-&gt;x - p.x)) <span class="keyword">return</span> op * <span class="built_in">dcmp</span>(p.y - it-&gt;y) &gt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (it == s.<span class="built_in">begin</span>()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    Point b = *it, a = *--it;</span><br><span class="line">    <span class="keyword">return</span> op * ((b - a) ^ (p - a)) &gt;= <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">auto</span> it)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">next</span>(it) == s.<span class="built_in">end</span>() || it == s.<span class="built_in">begin</span>()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    Point p = *it, a = *<span class="built_in">prev</span>(it), b = *<span class="built_in">next</span>(it);</span><br><span class="line">    <span class="keyword">return</span> op * <span class="built_in">dcmp</span>((b - a) ^ (p - a)) &gt;= <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">ins</span><span class="params">(Point p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">in</span>(p)) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">auto</span> it = s.<span class="built_in">lower_bound</span>(<span class="built_in">Point</span>(p.x, -Infdb));</span><br><span class="line">    <span class="keyword">if</span> (it != s.<span class="built_in">end</span>() &amp;&amp; !<span class="built_in">dcmp</span>(it-&gt;x - p.x)) s.<span class="built_in">erase</span>(it);</span><br><span class="line">    s.<span class="built_in">insert</span>(p), it = s.<span class="built_in">find</span>(p);</span><br><span class="line">    <span class="keyword">auto</span> cur = <span class="built_in">next</span>(it);</span><br><span class="line">    <span class="keyword">while</span> (cur != s.<span class="built_in">end</span>() &amp;&amp; <span class="built_in">judge</span>(cur)) cur = s.<span class="built_in">erase</span>(cur);</span><br><span class="line">    <span class="keyword">if</span> (it != s.<span class="built_in">begin</span>()) &#123;</span><br><span class="line">      cur = <span class="built_in">prev</span>(it);</span><br><span class="line">      <span class="keyword">while</span> (<span class="built_in">judge</span>(cur)) s.<span class="built_in">erase</span>(cur--);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; up, down;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
  </entry>
  <entry>
    <title>24.01.08 闲话</title>
    <url>/posts/24-01-08/</url>
    <content><![CDATA[<p>上周短短续续发了一个星期的烧，感觉比去年这个时候的新冠和 APIO 那次发烧要久得多。真的是折磨死我了，星期二的时候突然得知要周三要考实验操作，本来已经烧到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>39</mn></mrow><annotation encoding="application/x-tex">39</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">39</span></span></span></span> 度了还要润去学校蹭别的班一节物理实验课，此外直到晚上都不知道生物和化学实验做哪些，课都没上过，最后的决定是干脆摆了。</p>
<span id="more"></span>
<p>第二天的结果也很搞笑，化学实验结论我乱写的方程式还对了一个，脸不红心不跳地交上去他也不扣我写错了的分，生物我漏一堆步骤还把盖玻片捏碎了然后满分，物理那个电路我在给他电压表连爆了的情况下瞎写的数据也不扣分。</p>
<p>星期天还要考政治和物理的会考，后面几天又是在极度难受的情况下预习，预习的效果大概是关书还是不会，我都不知道高考选政治的同学是怎么想的，这种东西一天都坚持看不了。模拟题很难，但是我奶了一手全是送的就继续开摆了，事实证明是我是对的，尤其是这个物理。</p>
<p>总而言之这周就是身体和精神上双重折磨，另外一层折磨就是我这周就写了一道题，SCOI 却近在咫尺了。</p>
<p>我一直感觉我学 OI 好像效率很低，就是每过一个月我都会觉得自己这一个月好像是混过去了什么事都没干，深深地陷入自我怀疑。我很好奇 Au 选手一天到底能写多少道题，还是有什么其他衡量训练效果的方式能够让自己感到充实，你说我摸鱼吧我从早训到晚平均也就 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∼</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">2\sim 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 个题，有些时候卡题了还 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 个题。而我并没有花大量的时间去写代码，相反我耗费的时间主要在想题上面，只能说我并不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">100%</span></span></span></span> 的时间的思考都有进展，不知不觉中就造成了时间的浪费，对此我也没有很好的解决办法。</p>
<p>还有就是我现在没办法很好的评估自己的水平，我敢肯定我是在潜移默化地进步的，每次联考我都能打出不错的状态而且几乎不犯病，但是 OI 系列的比赛里并没有表现出来，CSP 肯定是我的锅，NOIP 我是真的感受到无力，一个多小时的时间里，我完全找不到 B 题哪里 WA 了，最后就是一个很小很小的没清空的锅，但是我找了好多遍，扫过相同的位置了好多遍，我没时间想 C 题，最后结果也很不满意。这段时间我也尝试了避免这种情况出现，比如减少无脑 cerr，不测大样例直接交，强迫自己能直接肉眼把错挑出来，我认为确实也有效果。</p>
<p>其实最直观的矛盾感是从上周的百度之星引申出来的，虽然最后 T9 我网络流板子写错了爆了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>18</mn></mrow><annotation encoding="application/x-tex">18</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">18</span></span></span></span> 发，但是依旧最后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>min</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">2\min</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span></span></span></span> 绝杀到了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>k</mi><mn>60</mn></mrow><annotation encoding="application/x-tex">rk60</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">60</span></span></span></span>，很难过的是，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>k</mi><mn>59</mn></mrow><annotation encoding="application/x-tex">rk59</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">59</span></span></span></span> 是我左边的老哥，再往前数几个就看到 Au 爷了，同样过了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>9</mn></mrow><annotation encoding="application/x-tex">9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">9</span></span></span></span> 个题的选手，有的 Ag 了，有的甚至 Au，我去年因为省选犯病连省队的进不了，我今年省选是否能给我一个好的结果？</p>
<p>剩下的一个月时间里节奏很快了，大概就是调整状态应对 thuwc 和 SCOI，训练方向主要还是减少犯病（写挂、debug 时间太长、想的太慢），训练材料多半是 CNOI 系列的题和别人博客里面给的 CF/AT 好题。</p>
<p>农那边 AG 冠军了，距离上一个冠军时隔 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 年，总感觉有些经历是相似的，希望今年我也能够有个好的结果。</p>
]]></content>
      <categories>
        <category>Mess</category>
      </categories>
  </entry>
</search>
